<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- Saves a locale change using a session -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	
		<!-- 上传文件  -->
	 <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传文件大小限制，单位byte -->
		<property name="maxUploadSize" value="10000000" />
		<!-- 请求的编码格式 默认为 IOS-8859-1 -->
		<property name="defaultEncoding" value="UTF-8" /> 
		 <!-- 设置上传文件的临时路径 -->
<!--  		 <property name="uploadTempDir" value="upload/temp"/>   -->
	</bean>
	
    <!-- 异常处理 -->
   <!-- <bean id="webExceptionResolver" class="com.aiyounet.sscjihua.util.WebExceptionResolver"/>  --> 
    
      <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />  
      
      
	<!-- 方法适配器，使得controller下大了RequestMapping注解的方法可以映射为具体的.do请求 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		 <property name="webBindingInitializer"> 
             <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer"> 
                <property name="conversionService" ref="conversionService" /> 
            </bean> 
        </property> 
		<property name="messageConverters"> 
         <list> 
         	<!-- 关于参数(消息)的转换bean，可使方法的参数列表自动接收请求中所带的同名参数,如a.do?p1=abc，则a方法中只要有p1的参数，就可以接收abc这个值 -->
             <bean class = "org.springframework.http.converter.StringHttpMessageConverter">   
                <property name = "supportedMediaTypes">
                      <list>
                          <value>text/plain;charset=utf-8</value>
                     </list>   
                </property>   
             </bean>   
             <!-- 关于返回值的转换bean，spring原生支持jackson框架，方法return的结果自动切换为json格式返回前端 -->
             <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
             	<property name = "supportedMediaTypes">
                      <list>
                          <value>text/plain;charset=utf-8</value>
                     </list>   
                </property>  
             </bean>
         </list> 
   		</property>
	</bean> 
	
	<!-- url映射配置，支持rest风格 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
		<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
			<property name="defaultEncoding" value="ISO-8859-1" />
			<property name="basenames">
				<list>
					<value>classpath:/resources/bundle/messages</value>
					<value>classpath:/resources/config</value>
				</list>
			</property> 
			<property name="cacheSeconds" value="60" />
		</bean>
	
	<!-- 类级别的适配器，可以将一个bean转化为controller用于接收请求。命名规则为 XXXController，映射结果为/XXX/a.do(XXX为小写)，需要为bean打上controller注解 -->
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
	     <property name="interceptors">  
         <list>  
                <!-- <bean class="com.aiyounet.client.service.interceptor.InteceptorController" /> -->
                 <bean class="com.aiyounet.basicFunc.service.interceptor.InteceptorController" />
         </list>  
     	</property>
    </bean>
    
	
	
	<mvc:default-servlet-handler/>
	<mvc:interceptors>
		<!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>
	<mvc:resources mapping="/common/**" location="/common/"/>  
	<mvc:resources mapping="/data/**" location="/data/" /> 
	<mvc:resources mapping="/ad/**" location="/ad/" />
 
	<context:component-scan base-package="com.aiyounet">   
    	<context:include-filter type="regex" expression="com\.aiyounet\..*\.ctrl\..*"/>   
	</context:component-scan>  
</beans>
