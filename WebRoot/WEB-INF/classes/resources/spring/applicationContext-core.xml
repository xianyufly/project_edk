<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/tx  
                        http://www.springframework.org/schema/tx/spring-tx.xsd  
                        http://www.springframework.org/schema/aop  
                        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 加载数据库配置文件 -->

	<context:property-placeholder location="classpath:resources/config.properties" />
	<!-- <bean id="sender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="host" value="smtp.gmail.com"/> <property name="username" 
		value="wengzhongqin@gmail.com" /> <property name="password" value="weng234810" 
		/> <property name="javaMailProperties"> <props> <prop key="mail.smtp.auth">true</prop> 
		<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> 
		<prop key="mail.smtp.socketFactory.fallback">false</prop> <prop key="mail.smtp.port">465</prop> 
		<prop key="mail.smtp.socketFactory.port">465</prop> </props> </property> 
		</bean> -->
	<!-- 配置日志 DataSource -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="poolProperties">
			<bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
				<property name="driverClassName" value="${database.driver}" />
				<property name="url" value="${database.url}" />
				<property name="username" value="${database.username}" />
				<property name="password" value="${database.password}" />
				<property name="jmxEnabled" value="true" />
				<property name="testWhileIdle" value="true" />
				<property name="testOnBorrow" value="true" />
				<property name="testOnReturn" value="false" />
				<property name="validationInterval" value="30000" />
				<property name="validationQuery" value="SELECT 1" />
				<property name="timeBetweenEvictionRunsMillis" value="30000" />
				<property name="maxActive" value="500" />
				<property name="initialSize" value="20" />
				<property name="maxWait" value="-1" />
				<property name="minEvictableIdleTimeMillis" value="30000" />
				<property name="minIdle" value="20" />
				<property name="logAbandoned" value="false" />
				<property name="removeAbandoned" value="true" />
				<property name="removeAbandonedTimeout" value="60" />
				<property name="jdbcInterceptors"
					value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />
			</bean>
		</property>
	</bean>
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		destroy-method="close"> <property name="driverClass" value="${database.driver}" 
		/> <property name="jdbcUrl" value="${database.url}" /> <property name="user" 
		value="${database.username}" /> <property name="password" value="${database.password}" 
		/> <property name="initialPoolSize" value="${c3p0.initialPoolSize}" /> <property 
		name="minPoolSize" value="${c3p0.minPoolSize}" /> <property name="maxPoolSize" 
		value="${c3p0.maxPoolSize}" /> <property name="maxStatements" value="${c3p0.maxStatements}" 
		/> <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" 
		/> <property name="maxIdleTime" value="${c3p0.maxIdleTime}" /> <property 
		name="acquireIncrement" value="${c3p0.acquireIncrement}" /> <property name="testConnectionOnCheckout" 
		value="${c3p0.testConnectionOnCheckout}" /> </bean> -->

	<!-- session factory -->
	<bean id="mySessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:resources/ibatis/mybatis-config.xml" />
		<!-- 扫描多个包用逗号分隔 -->
		<property name="typeAliasesPackage"
			value="com.aiyounet.*.dao.bean" />
		<!-- 扫描所有mybatis xml映射文件 -->
		<property name="mapperLocations"
			value="classpath*:com/aiyounet/*/dao/ibatis/*.xml" />
	</bean>
	<bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.aiyounet.*.dao.ibatis" />
		<property name="sqlSessionFactoryBeanName" value="mySessionFactory" />
	</bean>
	<!-- freeMarker注释
	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/client/ftl/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean> -->
	<!-- 配置hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">validation</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<!-- <prop key="hibernate.show_sql">true</prop> <prop key="hibernate.format_sql">true</prop> -->
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.aiyounet.**.bean</value>
				<value>com.aiyounet.**.dao.bean</value>
			</list>
		</property>
	</bean>
	<bean id="hibernateTransactionManager"  
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">   
        <property name="sessionFactory" ref="sessionFactory" />   
    </bean>  
	
	<!-- ==============================   spring线程池的配置       ============================= -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">                 
                      <!-- 线程池活跃的线程数 -->     
        <property name="corePoolSize" value="10" />   
                       <!-- 线程池最大活跃的线程数 -->    
        <property name="maxPoolSize" value="20" />   
                       <!-- 队列的最大容量 -->    
        <property name="queueCapacity" value="25" />  
        
        <property name="keepAliveSeconds" value="5" />
    </bean>  
     <!-- <bean id="WDCollectService" class="com.aiyounet.collect.service.impl.WDCollectServiceImpl">   
        <property name="taskExecutor" ref="taskExecutor" />
    </bean>  -->
	
	<!-- ==============================   事务代理拦截器的配置       ============================= -->
	<tx:advice id="txAdvice" transaction-manager="hibernateTransactionManager" >    
	    <tx:attributes>  
	        <tx:method name="del*" propagation="REQUIRED" />  
	        <tx:method name="save*" propagation="REQUIRED" />  
	        <tx:method name="update*" propagation="REQUIRED" />  
	        <tx:method name="add*" propagation="REQUIRED" />  
	        <tx:method name="create*" propagation="REQUIRED" /> 
	        <tx:method name="*" propagation="REQUIRED" /> 
	        <tx:method name="get*" propagation="REQUIRED"/>
	        <tx:method name="query*" propagation="REQUIRED" />
	    </tx:attributes>  
	</tx:advice>


	<!-- 配置aop 切入点 和事务访问策略，拦截service层 -->
	<aop:config expose-proxy="true">
		<aop:pointcut id="serviceOperation"
			expression="execution(* com.aiyounet..service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>

	<!-- spring的组件扫描,不扫描controller注解的bean -->
	<context:component-scan base-package="com.aiyounet">
		<context:exclude-filter type="regex"
			expression="com\.aiyounet\..*\.ctrl\..*" />
	</context:component-scan>
</beans>